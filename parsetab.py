
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASC BY COMA COMILLA COUNT DESC DESIGUAL DISTINCT FROM GROUP HAVING IGUAL IN INNER JOIN LEFT MAX MAYOR_IZQ MAY_IGUAL_IZQ MENOR_IZQ MEN_IGUAL_IZQ MIN NUMERO ON OR ORDER PALABRA PAREN_DER PAREN_IZQ PUNTO PUNTOCOMA SELECT WHERE\n    consulta : SELECT campos FROM tablas join where grupos order_by\n\n    campos : columna\n    campos : funcion\n    campos : columna COMA campos\n    campos : funcion COMA campos\n\n    tablas : tabla\n    tablas : tabla COMA tablas\n    tabla : PALABRA\n    tabla : PALABRA AS PALABRA\n    tabla : PALABRA PALABRA\n\n    columnas : columna\n    columnas : columna COMA columnas\n    columna : PALABRA PUNTO PALABRA\n    columna : PALABRA PUNTO PALABRA AS PALABRA\n\n    funcion : MIN PAREN_IZQ columna PAREN_DER\n    funcion : MAX PAREN_IZQ columna PAREN_DER\n    funcion : COUNT PAREN_IZQ columna PAREN_DER\n    funcion : COUNT PAREN_IZQ DISTINCT columna PAREN_DER\n\n    join : INNER JOIN tabla ON condicion join\n    join : LEFT JOIN tabla ON condicion join\n    join :\n\n    where : WHERE condiciones\n    where :\n\n    grupos : group_by\n    grupos : group_by having\n    grupos :\n\n    group_by : GROUP BY columnas\n\n    having : HAVING condiciones_having\n    condiciones_having : funcion operador valor\n    condiciones_having : funcion operador valor COMA condiciones_having\n\n    order_by : ORDER BY condiciones_orderby\n    condiciones_orderby : columna orden\n    condiciones_orderby : columna orden COMA condiciones_orderby\n\n    condiciones : condicion\n    condiciones : condicion booleano condiciones\n    condicion : columna operador valor\n    condicion : columna operador columna\n    condicion : columna IN PAREN_IZQ consulta PAREN_DER\n\n    valor : NUMERO\n    valor : COMILLA PALABRA COMILLA\n\n    operador : IGUAL\n    operador : DESIGUAL\n    operador : MENOR_IZQ\n    operador : MEN_IGUAL_IZQ\n    operador : MAYOR_IZQ\n    operador : MAY_IGUAL_IZQ\n\n    booleano : AND\n    booleano : OR\n\n    orden : ASC\n    orden : DESC\n    orden :\n\n\n    '
    
_lr_action_items = {'SELECT':([0,82,],[2,2,]),'$end':([1,22,44,54,85,86,93,94,95,102,],[0,-13,-14,-1,-31,-51,-32,-49,-50,-33,]),'PALABRA':([2,10,11,12,13,14,15,16,19,26,30,32,33,39,40,41,58,59,60,61,62,64,65,66,67,68,69,70,71,72,81,88,100,],[6,19,6,6,22,6,6,6,31,6,19,43,44,6,19,19,6,6,-47,-48,6,-41,-42,-43,-44,-45,-46,6,6,6,89,6,6,]),'MIN':([2,11,12,57,101,],[7,7,7,7,7,]),'MAX':([2,11,12,57,101,],[8,8,8,8,8,]),'COUNT':([2,11,12,57,101,],[9,9,9,9,9,]),'FROM':([3,4,5,20,21,22,34,35,36,44,45,],[10,-2,-3,-4,-5,-13,-15,-16,-17,-14,-18,]),'COMA':([4,5,18,19,22,31,34,35,36,43,44,45,76,80,86,93,94,95,96,98,],[11,12,30,-8,-13,-10,-15,-16,-17,-9,-14,-18,88,-39,-51,100,-49,-50,101,-40,]),'PUNTO':([6,],[13,]),'PAREN_IZQ':([7,8,9,63,],[14,15,16,82,]),'DISTINCT':([16,],[26,]),'INNER':([17,18,19,22,31,42,43,44,78,79,80,83,84,98,99,],[28,-6,-8,-13,-10,-7,-9,-14,-37,-36,-39,28,28,-40,-38,]),'LEFT':([17,18,19,22,31,42,43,44,78,79,80,83,84,98,99,],[29,-6,-8,-13,-10,-7,-9,-14,-37,-36,-39,29,29,-40,-38,]),'WHERE':([17,18,19,22,27,31,42,43,44,78,79,80,83,84,91,92,98,99,],[-21,-6,-8,-13,39,-10,-7,-9,-14,-37,-36,-39,-21,-21,-19,-20,-40,-38,]),'GROUP':([17,18,19,22,27,31,38,42,43,44,49,50,77,78,79,80,83,84,91,92,98,99,],[-21,-6,-8,-13,-23,-10,48,-7,-9,-14,-22,-34,-35,-37,-36,-39,-21,-21,-19,-20,-40,-38,]),'ORDER':([17,18,19,22,27,31,38,42,43,44,46,47,49,50,56,73,75,76,77,78,79,80,83,84,91,92,96,97,98,99,103,],[-21,-6,-8,-13,-23,-10,-26,-7,-9,-14,55,-24,-22,-34,-25,-28,-27,-11,-35,-37,-36,-39,-21,-21,-19,-20,-29,-12,-40,-38,-30,]),'ON':([19,31,43,52,53,],[-8,-10,-9,70,71,]),'AS':([19,22,],[32,33,]),'PAREN_DER':([22,23,24,25,37,44,54,85,86,90,93,94,95,102,],[-13,34,35,36,45,-14,-1,-31,-51,99,-32,-49,-50,-33,]),'IN':([22,44,51,],[-13,-14,63,]),'IGUAL':([22,34,35,36,44,45,51,74,],[-13,-15,-16,-17,-14,-18,64,64,]),'DESIGUAL':([22,34,35,36,44,45,51,74,],[-13,-15,-16,-17,-14,-18,65,65,]),'MENOR_IZQ':([22,34,35,36,44,45,51,74,],[-13,-15,-16,-17,-14,-18,66,66,]),'MEN_IGUAL_IZQ':([22,34,35,36,44,45,51,74,],[-13,-15,-16,-17,-14,-18,67,67,]),'MAYOR_IZQ':([22,34,35,36,44,45,51,74,],[-13,-15,-16,-17,-14,-18,68,68,]),'MAY_IGUAL_IZQ':([22,34,35,36,44,45,51,74,],[-13,-15,-16,-17,-14,-18,69,69,]),'HAVING':([22,44,47,75,76,97,],[-13,-14,57,-27,-11,-12,]),'AND':([22,44,50,78,79,80,98,99,],[-13,-14,60,-37,-36,-39,-40,-38,]),'OR':([22,44,50,78,79,80,98,99,],[-13,-14,61,-37,-36,-39,-40,-38,]),'ASC':([22,44,86,],[-13,-14,94,]),'DESC':([22,44,86,],[-13,-14,95,]),'JOIN':([28,29,],[40,41,]),'BY':([48,55,],[58,72,]),'NUMERO':([62,64,65,66,67,68,69,87,],[80,-41,-42,-43,-44,-45,-46,80,]),'COMILLA':([62,64,65,66,67,68,69,87,89,],[81,-41,-42,-43,-44,-45,-46,81,98,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'consulta':([0,82,],[1,90,]),'campos':([2,11,12,],[3,20,21,]),'columna':([2,11,12,14,15,16,26,39,58,59,62,70,71,72,88,100,],[4,4,4,23,24,25,37,51,76,51,78,51,51,86,76,86,]),'funcion':([2,11,12,57,101,],[5,5,5,74,74,]),'tablas':([10,30,],[17,42,]),'tabla':([10,30,40,41,],[18,18,52,53,]),'join':([17,83,84,],[27,91,92,]),'where':([27,],[38,]),'grupos':([38,],[46,]),'group_by':([38,],[47,]),'condiciones':([39,59,],[49,77,]),'condicion':([39,59,70,71,],[50,50,83,84,]),'order_by':([46,],[54,]),'having':([47,],[56,]),'booleano':([50,],[59,]),'operador':([51,74,],[62,87,]),'condiciones_having':([57,101,],[73,103,]),'columnas':([58,88,],[75,97,]),'valor':([62,87,],[79,96,]),'condiciones_orderby':([72,100,],[85,102,]),'orden':([86,],[93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> consulta","S'",1,None,None,None),
  ('consulta -> SELECT campos FROM tablas join where grupos order_by','consulta',8,'p_consulta','grupo99.py',99),
  ('campos -> columna','campos',1,'p_consulta','grupo99.py',101),
  ('campos -> funcion','campos',1,'p_consulta','grupo99.py',102),
  ('campos -> columna COMA campos','campos',3,'p_consulta','grupo99.py',103),
  ('campos -> funcion COMA campos','campos',3,'p_consulta','grupo99.py',104),
  ('tablas -> tabla','tablas',1,'p_consulta','grupo99.py',106),
  ('tablas -> tabla COMA tablas','tablas',3,'p_consulta','grupo99.py',107),
  ('tabla -> PALABRA','tabla',1,'p_consulta','grupo99.py',108),
  ('tabla -> PALABRA AS PALABRA','tabla',3,'p_consulta','grupo99.py',109),
  ('tabla -> PALABRA PALABRA','tabla',2,'p_consulta','grupo99.py',110),
  ('columnas -> columna','columnas',1,'p_consulta','grupo99.py',112),
  ('columnas -> columna COMA columnas','columnas',3,'p_consulta','grupo99.py',113),
  ('columna -> PALABRA PUNTO PALABRA','columna',3,'p_consulta','grupo99.py',114),
  ('columna -> PALABRA PUNTO PALABRA AS PALABRA','columna',5,'p_consulta','grupo99.py',115),
  ('funcion -> MIN PAREN_IZQ columna PAREN_DER','funcion',4,'p_consulta','grupo99.py',117),
  ('funcion -> MAX PAREN_IZQ columna PAREN_DER','funcion',4,'p_consulta','grupo99.py',118),
  ('funcion -> COUNT PAREN_IZQ columna PAREN_DER','funcion',4,'p_consulta','grupo99.py',119),
  ('funcion -> COUNT PAREN_IZQ DISTINCT columna PAREN_DER','funcion',5,'p_consulta','grupo99.py',120),
  ('join -> INNER JOIN tabla ON condicion join','join',6,'p_consulta','grupo99.py',122),
  ('join -> LEFT JOIN tabla ON condicion join','join',6,'p_consulta','grupo99.py',123),
  ('join -> <empty>','join',0,'p_consulta','grupo99.py',124),
  ('where -> WHERE condiciones','where',2,'p_consulta','grupo99.py',126),
  ('where -> <empty>','where',0,'p_consulta','grupo99.py',127),
  ('grupos -> group_by','grupos',1,'p_consulta','grupo99.py',129),
  ('grupos -> group_by having','grupos',2,'p_consulta','grupo99.py',130),
  ('grupos -> <empty>','grupos',0,'p_consulta','grupo99.py',131),
  ('group_by -> GROUP BY columnas','group_by',3,'p_consulta','grupo99.py',133),
  ('having -> HAVING condiciones_having','having',2,'p_consulta','grupo99.py',135),
  ('condiciones_having -> funcion operador valor','condiciones_having',3,'p_consulta','grupo99.py',136),
  ('condiciones_having -> funcion operador valor COMA condiciones_having','condiciones_having',5,'p_consulta','grupo99.py',137),
  ('order_by -> ORDER BY condiciones_orderby','order_by',3,'p_consulta','grupo99.py',139),
  ('condiciones_orderby -> columna orden','condiciones_orderby',2,'p_consulta','grupo99.py',140),
  ('condiciones_orderby -> columna orden COMA condiciones_orderby','condiciones_orderby',4,'p_consulta','grupo99.py',141),
  ('condiciones -> condicion','condiciones',1,'p_consulta','grupo99.py',143),
  ('condiciones -> condicion booleano condiciones','condiciones',3,'p_consulta','grupo99.py',144),
  ('condicion -> columna operador valor','condicion',3,'p_consulta','grupo99.py',145),
  ('condicion -> columna operador columna','condicion',3,'p_consulta','grupo99.py',146),
  ('condicion -> columna IN PAREN_IZQ consulta PAREN_DER','condicion',5,'p_consulta','grupo99.py',147),
  ('valor -> NUMERO','valor',1,'p_consulta','grupo99.py',149),
  ('valor -> COMILLA PALABRA COMILLA','valor',3,'p_consulta','grupo99.py',150),
  ('operador -> IGUAL','operador',1,'p_consulta','grupo99.py',152),
  ('operador -> DESIGUAL','operador',1,'p_consulta','grupo99.py',153),
  ('operador -> MENOR_IZQ','operador',1,'p_consulta','grupo99.py',154),
  ('operador -> MEN_IGUAL_IZQ','operador',1,'p_consulta','grupo99.py',155),
  ('operador -> MAYOR_IZQ','operador',1,'p_consulta','grupo99.py',156),
  ('operador -> MAY_IGUAL_IZQ','operador',1,'p_consulta','grupo99.py',157),
  ('booleano -> AND','booleano',1,'p_consulta','grupo99.py',159),
  ('booleano -> OR','booleano',1,'p_consulta','grupo99.py',160),
  ('orden -> ASC','orden',1,'p_consulta','grupo99.py',162),
  ('orden -> DESC','orden',1,'p_consulta','grupo99.py',163),
  ('orden -> <empty>','orden',0,'p_consulta','grupo99.py',164),
]
